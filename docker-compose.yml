volumes:
  postgres-storage:
    name: ${SERVICE:-srv-postgrade}-postgres-storage
  mongo-storage:
    name: ${SERVICE:-srv-postgrade}-mongo-storage
  postgrade-storage:
    name: ${SERVICE:-srv-postgrade}-postgrade-storage
    external: true

networks:
  domain:
    driver: bridge
    name: ${DOMAIN:-postgrade.srv}
    external: true

services:
  # Serviço do PostgreSQL
  pg.db.srv:
    image: zootakuxy/postgrade-pg
    build:
      context: .
      dockerfile: pg/Dockerfile
    container_name: ${SERVICE:-srv-postgrade}-postgres
    hostname: pg.db.${DOMAIN:-postgrade.srv}
    env_file:
      - ${POSTGRES_ENVFILE:-ignore}
    extra_hosts:
      - host.docker.internal:172.17.0.1
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE:-postgres}
    volumes:
      - postgres-storage:/var/lib/postgresql/data
      - postgrade-storage:/etc/postgrade
    networks:
      - domain
    ports:
      - "${POSTGRES_PORT:-}:5432"
    restart: always
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: 3.0

  # Serviço do MongoDB
  mg.db.srv:
    image: mongo:latest
    container_name: ${SERVICE:-srv-postgrade}-mongo
    hostname: mg.db.${DOMAIN:-postgrade.srv}
    env_file:
      - ${MONGDB_ENVFILE:-ignore}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-mdb}
    volumes:
      - mongo-storage:/data/db
      - postgrade-storage:/etc/postgrade
    networks:
      - domain
    extra_hosts:
      - host.docker.internal:172.17.0.1
    ports:
      - "${MONGO_PORT:-}:27017"
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: 1.0

  # Serviço de Administração PostgreSQL (API)
  admin.internal.srv:
    image: zootakuxy/postgrade-admin
    build:
      context: .
      dockerfile: admin/Dockerfile
    container_name: ${SERVICE:-srv-postgrade}-admin
    hostname: admin.internal.${DOMAIN:-postgrade.net}
    env_file:
      - ${ADMIN_ENVFILE:-ignore}
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - postgrade-storage:/etc/postgrade
      - postgres-storage:/var/lib/postgresql/data
    ports:
      - ${ADMIN_PORT:-4000}:4000
    networks:
      - domain
    extra_hosts:
      - host.docker.internal:172.17.0.1

    depends_on:
      - pg.db.srv
    restart: always
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: 0.5


  # Serviço P2M (PostgreSQL para MongoDB)
  p2m.internal.srv:
    image: zootakuxy/postgrade-p2m
    build:
      context: .
      dockerfile: p2m/Dockerfile
    container_name: ${SERVICE:-srv-postgrade}-p2m
    hostname: p2m.internal.${DOMAIN:-postgrade.srv}
    env_file:
      - ${P2M_ENVFILE:-ignore}
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      MONGO_HOST:  ${MONGO_HOST:-mg.db.srv}
      MONGO_PORT:  ${MONGO_PORT:-27017}
      MONGO_USER:  ${MONGO_USER:-root}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - domain
    extra_hosts:
      - host.docker.internal:172.17.0.1

    depends_on:
      - pg.db.srv
      - mg.db.srv
    restart: always
    ports:
      - ${P2M_PORT:-5000}:5000
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: 2.0
